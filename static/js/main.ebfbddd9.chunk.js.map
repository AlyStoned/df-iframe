{"version":3,"sources":["components/file-handler/FileHandler.module.css","utils/exposedAPI.ts","constants.ts","utils/nanoid.ts","components/file-handler/FileHandler.tsx","logo.svg","App.tsx","index.tsx"],"names":["module","exports","ClientExposedAPI","src","url","api","port","URL","handleDocumentReady","bind","handleInitMessage","document","addEventListener","event","this","eventIsValid","ports","setupApi","Boolean","origin","startsWith","data","status","wrap","fire","that","script","querySelector","iframe","window","__digifabsterCompanyWidgetUrl","init","once","removeEventListener","releaseProxy","off","name","args","method","ready","a","Reflect","apply","Promise","resolve","get","EventEmitter","exposedApi","urlAlphabet","nanoid","size","id","i","Math","random","FileHandler","useState","fileObjects","setFileObjects","disabled","length","useDropzone","onDropAccepted","acceptedFiles","evt","fileObjs","map","file","uuid","exists","multiple","maxFiles","getRootProps","getInputProps","transferModels","useCallback","call","fileObject","handleDocumentClick","element","target","classList","contains","closest","useEffect","className","cn","styles","row","hidden","title","onClick","uuit","stopPropagation","filter","App","logo","alt","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ebfbddd9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"FileHandler_row__3ctkL\",\"button\":\"FileHandler_button__2cmpa\",\"popup\":\"FileHandler_popup__6eeRa\"};","import { Remote, releaseProxy, wrap } from 'comlink';\nimport { EventEmitter } from '@billjs/event-emitter';\nimport { ExcludeConditionally, FilterConditionally } from '../types';\nimport { DigifabsterScriptSrc, DigifabsterIframeSrc } from '../constants';\n\nexport interface ExposedAPI {\n    transferModels: (files: File[]) => void;\n}\n\nexport type ExposedAPIFields = ExcludeConditionally<ExposedAPI, Function>;\nexport type ExposedAPIMethods = FilterConditionally<ExposedAPI, Function>;\n\nexport class ClientExposedAPI extends EventEmitter {\n    public readonly src: string = DigifabsterIframeSrc;\n    public url: URL;\n    public api?: Remote<ExposedAPI>;\n    private port?: MessagePort;\n\n    constructor() {\n        super();\n        this.url = new URL(this.src);\n\n        this.handleDocumentReady = this.handleDocumentReady.bind(this);\n        this.handleInitMessage = this.handleInitMessage.bind(this);\n\n        document.addEventListener('DOMContentLoaded', this.handleDocumentReady);\n    }\n\n    private handleInitMessage(event: MessageEvent) {\n        if (!this.eventIsValid(event)) return;\n\n        this.port = event.ports[0];\n        this.setupApi(this.port);\n    }\n\n    private eventIsValid(event: MessageEvent) {\n        return Boolean(event.origin.startsWith(this.url.origin) && event.data.status === 'ready' && event.ports[0]);\n    }\n\n    private setupApi(port: MessagePort) {\n        this.api = wrap<ExposedAPI>(port);\n        this.fire('ready', this.api);\n    }\n\n    private handleDocumentReady() {\n        const that = this;\n\n        const script = document.querySelector(`script[src=\"${DigifabsterScriptSrc}\"]`);\n        script?.addEventListener(\n            'load',\n            function () {\n                const iframe = document.querySelector(`iframe[src^=\"${window.__digifabsterCompanyWidgetUrl}\"]`);\n                iframe?.addEventListener(\n                    'load',\n                    () => {\n                        that.init();\n                    },\n                    { once: true },\n                );\n            },\n            { once: true },\n        );\n    }\n\n    private init() {\n        // Listen for the initial port transfer message\n        window.addEventListener('message', this.handleInitMessage);\n    }\n\n    public destroy() {\n        // console.log('destroy');\n        window.removeEventListener('message', this.handleInitMessage);\n        this.api && this.api[releaseProxy]();\n        this.fire('destroy');\n        this.off();\n    }\n\n    public async call<T extends keyof ExposedAPIMethods>(name: T, ...args: Parameters<ExposedAPIMethods[T]>) {\n        const that = this;\n        const method = this.api![name];\n\n        if (!this.ready) {\n            this.once('ready', async () => {\n                await Reflect.apply(method, that.api, args);\n                // await method(...args);\n            });\n            return;\n        }\n\n        await Reflect.apply(method, this.api, args);\n        // await method(...args);\n    }\n\n    public async get<T extends keyof ExposedAPIFields>(name: T) {\n        if (!this.ready) return Promise.resolve();\n\n        return await Reflect.get(this.api!, name);\n    }\n\n    public get ready() {\n        return Boolean(this.port && this.api);\n    }\n}\n\nexport const exposedApi = new ClientExposedAPI();\n","export const DigifabsterScriptSrc = 'https://digifabster.com/static/js/widget.js';\n// export const DigifabsterIframeSrc = 'http://localhost:4200/4taps/widget/upload';\n// export const DigifabsterIframeSrc = 'https://app.digifabster.com/polyspectra/widget/upload/';\nexport const DigifabsterIframeSrc = 'https://app-test.digifabster.com/4taps/widget/upload';\nexport const DigifabsterCloseWidgetClassname = 'df-widget-close';\nexport const DigifabsterOpenWidgetBtnSelector = '#df-widget-btn';\n","// Borrowed from https://github.com/ai/nanoid/blob/3.0.2/non-secure/index.js\r\n// This alphabet uses `A-Za-z0-9_-` symbols. A genetic algorithm helped\r\n// optimize the gzip compression for this alphabet.\r\nlet urlAlphabet =\r\n  'ModuleSymbhasOwnPr-0123456789ABCDEFGHNRVfgctiUvz_KqYTJkLxpZXIjQW'\r\n\r\n/**\r\n *\r\n * @public\r\n */\r\nexport let nanoid = (size = 21) => {\r\n  let id = ''\r\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\r\n  let i = size\r\n  while (i--) {\r\n    // `| 0` is more compact and faster than `Math.floor()`.\r\n    id += urlAlphabet[(Math.random() * 64) | 0]\r\n  }\r\n  return id\r\n}\r\n","import cn from 'classnames';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useDropzone, DropzoneOptions } from 'react-dropzone';\n\nimport { FileObject } from './types';\nimport { exposedApi, nanoid } from '../../utils';\nimport { DigifabsterCloseWidgetClassname, DigifabsterOpenWidgetBtnSelector } from '../../constants';\n\nimport styles from './FileHandler.module.css';\n\nconst maxFiles = 1;\nconst multiple = maxFiles > 1;\n\nexport function FileHandler() {\n    const [fileObjects, setFileObjects] = useState<FileObject[]>([]);\n    const disabled = fileObjects.length === maxFiles;\n\n    const handleDropAccepted: DropzoneOptions['onDropAccepted'] = (acceptedFiles, evt) => {\n        const fileObjs = acceptedFiles.map(file => {\n            return {\n                uuid: nanoid(),\n                file,\n            };\n        });\n\n        // Notify added files\n        setFileObjects(exists => {\n            // Handle a single file\n            if (maxFiles <= 1) {\n                return [fileObjs[0]];\n            }\n\n            // Handle multiple files\n            return exists.concat(fileObjs);\n        });\n    };\n\n    const handleRemove = (uuit: string) => (event: MouseEvent) => {\n        event.stopPropagation(); // case into dropzone\n\n        // Update local state\n        setFileObjects(exists => exists.filter(fileObject => fileObject.uuid !== uuit));\n    };\n\n    const { getRootProps, getInputProps } = useDropzone({\n        // onDrop,\n        onDropAccepted: handleDropAccepted,\n        multiple,\n        disabled,\n        maxFiles,\n    });\n\n    const transferModels = useCallback(async () => {\n        if (fileObjects.length) {\n            await exposedApi.call(\n                'transferModels',\n                fileObjects.map(fileObject => fileObject.file),\n            );\n\n            // reset dropzone files\n            setFileObjects([]);\n        }\n    }, [fileObjects]);\n\n    const handleDocumentClick = useCallback(\n        event => {\n            const element = event.target;\n\n            if (element.classList.contains(DigifabsterCloseWidgetClassname)) {\n                // console.log(event.target);\n            } else if (element.closest(DigifabsterOpenWidgetBtnSelector)) {\n                transferModels();\n            }\n        },\n        [transferModels],\n    );\n\n    useEffect(() => {\n        document.addEventListener('click', handleDocumentClick);\n        return () => {\n            document.removeEventListener('click', handleDocumentClick);\n        };\n    }, [handleDocumentClick]);\n\n    return (\n        <div>\n            <div className={cn(styles.row, { hidden: disabled })}>\n                <div {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    <p>Drop file here, or click to select file</p>\n                </div>\n            </div>\n            <div className={cn(styles.row, { hidden: !disabled })}>\n                {fileObjects.map(fileObject => (\n                    <button\n                        key={fileObject.uuid}\n                        title=\"Click to remove\"\n                        // @ts-ignore\n                        onClick={handleRemove(fileObject.uuid)}\n                    >\n                        {fileObject.file.name}\n                    </button>\n                ))}\n            </div>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/logo.183d3140.svg\";","import React from 'react';\nimport { FileHandler } from './components/file-handler/FileHandler';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <FileHandler />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}